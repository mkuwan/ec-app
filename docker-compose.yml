version: '3.9'

services:
  mongo:
    container_name: mongo_db
    hostname: mongo
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo:/data/db
      - configdb:/data/configdb
      - ./mongo/init:/docker-entrypoint-initdb.d
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: appdb
    networks:
      - mongo_db_net

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
    depends_on:
      - mongo
    networks:
      - mongo_db_net

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data


  mariadb_stock:
    container_name: mariadb_stock
    hostname: mariadb
    image: mariadb
    environment:
      # user: root
      MYSQL_ROOT_PASSWORD: mariapassword
      MYSQL_DATABASE: stockdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_bin
      - --skip-character-set-client-handshake
    networks:
      - mariadbnet
    ports:
      - "13306:3306"
    volumes:
      - mariadb_stock:/var/lib/mysql
    restart: always #unless-stopped

  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8306:80"
    environment:
      PMA_HOST: mariadb
      PMA_VERBOSE: sampledb
      PMA_PORT: 3306
    depends_on:
      - mariadb_stock
    networks:
      - mariadbnet

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"

networks:
  mongo_db_net:
    driver: bridge
  mariadbnet:
    driver: bridge

volumes:
  mongo:
  configdb:
  pgadmin:
  mariadb_stock:
  postgresql:
  postgresql_data:

